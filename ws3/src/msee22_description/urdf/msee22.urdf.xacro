<?xml version="1.0" encoding="UTF-8"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="msee22">

  <!-- Use this if parameters are set from the launch file, otherwise delete -->
  <xacro:arg name="prefix" default="" />

  <xacro:include filename="$(find msee22_description)/urdf/common/inertials.xacro"/>
  <xacro:include filename="$(find msee22_description)/urdf/common/materials.xacro"/>
  <xacro:include filename="$(find table_description)/urdf/table/table_macro.xacro" />
  <xacro:include filename="$(find wall_description)/urdf/wall/wall_macro.xacro" />
  <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro" />

  <!-- ROBOT ARGUMENTS -->

  <!-- set the ur_type here -->
    <xacro:arg name="name" default="ur"/>
  <xacro:arg name="ur_type" default="ur3e" />

  <!-- parameters -->
  <xacro:arg name="tf_prefix" default="" />
  <xacro:arg name="joint_limit_params"
    default="$(find ur_description)/config/$(arg ur_type)/joint_limits.yaml" />
  <xacro:arg name="kinematics_params"
    default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml" />
  <xacro:arg name="physical_params"
    default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml" />
  <xacro:arg name="visual_params"
    default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml" />
  <xacro:arg name="transmission_hw_interface" default="" />
  <xacro:arg name="safety_limits" default="false" />
  <xacro:arg name="safety_pos_margin" default="0.15" />
  <xacro:arg name="safety_k_position" default="20" />
  <!-- ros2_control related parameters -->
  <xacro:arg name="headless_mode" default="false" />
  <xacro:arg name="robot_ip" default="0.0.0.0" />
  <xacro:arg name="script_filename" default="" />
  <xacro:arg name="output_recipe_filename" default="" />
  <xacro:arg name="input_recipe_filename" default="" />
  <xacro:arg name="reverse_ip" default="0.0.0.0" />
  <xacro:arg name="script_command_port" default="50004" />
  <xacro:arg name="reverse_port" default="50001" />
  <xacro:arg name="script_sender_port" default="50002" />
  <xacro:arg name="trajectory_port" default="50003" />
  <!--   tool communication related parameters-->
  <xacro:arg name="use_tool_communication" default="false" />
  <xacro:arg name="tool_voltage" default="0" />
  <xacro:arg name="tool_parity" default="0" />
  <xacro:arg name="tool_baud_rate" default="115200" />
  <xacro:arg name="tool_stop_bits" default="1" />
  <xacro:arg name="tool_rx_idle_chars" default="1.5" />
  <xacro:arg name="tool_tx_idle_chars" default="3.5" />
  <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
  <xacro:arg name="tool_tcp_port" default="54321" />

  <!-- Simulation parameters -->
  <xacro:arg name="use_fake_hardware" default="false" />
  <xacro:arg name="fake_sensor_commands" default="false" />
  <xacro:arg name="sim_gazebo" default="false" />
  <xacro:arg name="sim_ignition" default="false" />
  <xacro:arg name="simulation_controllers" default="" />

  <!-- initial position for simulations (Fake Hardware, Gazebo, Ignition) -->
  <xacro:arg name="initial_positions_file"
    default="$(find ur_description)/config/initial_positions.yaml" />

  <!-- convert to property to use substitution in function -->
  <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)" />

  <!-- END ROBOT ARGUMENTS -->

  <!-- create link fixed to the "world" -->
  <link name="world" />

  <!-- change these values to tweak the layout of the room -->
  <xacro:property name="inch" value="0.0254" />
  <xacro:property name="table_length" value="${60*inch}" />
  <xacro:property name="table_width" value="${30*inch}" />
  <xacro:property name="table_height" value="${30*inch}" />
  <xacro:property name="wall1_length" value="5" />
  <xacro:property name="wall2_length" value="5" />

  <xacro:table prefix="table_" parent="world" length="${table_length}" width="${table_width}" height="${table_height}"
  thickness="${1*inch}" leg_radius="0.05" top_material="brown" leg_material="light_grey">
    <origin xyz="0 0 0" rpy="0 0 0" /> <!-- position table in the world -->
  </xacro:table>

  <!-- add the walls next to the table -->
  <xacro:wall prefix="wall1_" parent="world" length="5" thickness="0.5" height="3" material="white">
    <origin xyz="${table_length/2-wall1_length + 3*inch} ${table_width/2 + 1.5*inch} 0" rpy="0 0 0" /> <!-- position wall in the world -->
  </xacro:wall>

  <xacro:wall prefix="wall2_" parent="world" length="5" thickness="0.5" height="3" material="black">
    <origin xyz="${table_length/2 + 3*inch} ${table_length/2} 0 " rpy="0 0 ${radians(-90)}"/> <!-- position wall in the world -->
  </xacro:wall>

  <!-- arm -->
  <xacro:ur_robot
    name="$(arg name)"
    tf_prefix="$(arg tf_prefix)"
    parent="table_top"
    joint_limits_parameters_file="$(arg joint_limit_params)"
    kinematics_parameters_file="$(arg kinematics_params)"
    physical_parameters_file="$(arg physical_params)"
    visual_parameters_file="$(arg visual_params)"
    transmission_hw_interface="$(arg transmission_hw_interface)"
    safety_limits="$(arg safety_limits)"
    safety_pos_margin="$(arg safety_pos_margin)"
    safety_k_position="$(arg safety_k_position)"
    use_fake_hardware="$(arg use_fake_hardware)"
    fake_sensor_commands="$(arg fake_sensor_commands)"
    sim_gazebo="$(arg sim_gazebo)"
    sim_ignition="$(arg sim_ignition)"
    headless_mode="$(arg headless_mode)"
    initial_positions="${xacro.load_yaml(initial_positions_file)}"
    use_tool_communication="$(arg use_tool_communication)"
    tool_voltage="$(arg tool_voltage)"
    tool_parity="$(arg tool_parity)"
    tool_baud_rate="$(arg tool_baud_rate)"
    tool_stop_bits="$(arg tool_stop_bits)"
    tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
    tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
    tool_device_name="$(arg tool_device_name)"
    tool_tcp_port="$(arg tool_tcp_port)"
    robot_ip="$(arg robot_ip)"
    script_filename="$(arg script_filename)"
    output_recipe_filename="$(arg output_recipe_filename)"
    input_recipe_filename="$(arg input_recipe_filename)"
    reverse_ip="$(arg reverse_ip)"
    script_command_port="$(arg script_command_port)"
    reverse_port="$(arg reverse_port)"
    script_sender_port="$(arg script_sender_port)"
    trajectory_port="$(arg trajectory_port)"
  >
  <!-- position of robot on the table -->
  <origin xyz="0 ${7.5*inch} ${1*inch}" rpy="0 0 ${-radians(135)}" />  
  </xacro:ur_robot>
</robot>
